---
title: "Project 1"
author: "Tamdan Le, Alise Miller"
format: html
editor: visual
---

## Data Processing

```{r}
library(tidyverse)
library(readr)
EDU01A <-read_csv("data/EDU01a.csv")
EDU01A |>
  select(Area_name, STCOU, ends_with("D")) |>
  rename(area_name = Area_name) |>
  head(EDU01A, n=5)
```

#### Question 2 Convert to long format

```{r}
EDU01A_long<-
  EDU01A |>
  select(Area_name, STCOU, ends_with("D")) |>
  rename(area_name = Area_name) |>
  pivot_longer(cols= ends_with("D"),
               names_to = "EDU_combined",
               values_to = "enrollment_value"
               ) 
  head(EDU01A_long, n=5)
  
  
```

#### Question 3 Parsing

```{r}
EDU01A_longer <-
  EDU01A_long |>
  mutate(two_digit_year= (substr(EDU_combined, start=8, stop = 9)) ,
  year_dbl = as.double(two_digit_year), 
  year= if_else(year_dbl >25, 1900 + year_dbl, year_dbl <=25 + 2000),
  survey_value = substr(EDU_combined, start=1, stop = 7)
         )
EDU01A_longer
long_updated <- select(EDU01A_longer, area_name,STCOU, enrollment_value,year, survey_value)

head(long_updated, n=5)

  
```

#### Question 4 Two Tibbles

```{r}
County_indices <- grep(pattern = ", [A-Z]{2}", long_updated$area_name)
noncounty_tibble <- long_updated [-County_indices, ]
county_tibble <- long_updated [County_indices, ]

class(county_tibble) <- c("county", class(county_tibble))
class(noncounty_tibble) <- c("state", class(noncounty_tibble))

head(county_tibble, n=10)
head(noncounty_tibble, n=10)
```

#### Question 5 County level new variable

```{r}
county_tibble |>
mutate(state = substr(area_name, nchar(area_name) - 1, nchar(area_name))
)
```

#### Question 6 Non-county "division"

```{r}
noncounty_tibble2 <- noncounty_tibble |>
  mutate(
    state = sub(".*,\\s*", "", area_name),
division = case_when( 
  state %in% c("CONNECTICUT", "MAINE", "MASSACHUSETTS", "NEW HAMPSHIRE", "RHODE ISLAND", "VERMONT") ~ "New England",
      state %in% c("NEW JERSEY", "NEW YORK", "PENNSYLVANIA") ~ "Mid-Atlantic",
      state %in% c("ILLINOIS", "INDIANA", "MICHIGAN", "OHIO", "WISCONSIN") ~ "East North Central",
      state %in% c("IOWA", "KANSAS", "MINNESOTA", "NEBRASKA", "NORTH DAKOTA", "SOUTH DAKOTA") ~ "West North Central",
      state %in% c("DELAWARE", "DISTRICT OF COLUMBIA","District of Columbia", "FLORIDA", "GEORGIA", "MARYLAND", "NORTH CAROLINA", "SOUTH CAROLINA", "VIRGINIA", "WEST VIRGINIA") ~ "South Atlantic",
      state %in% c("ALABAMA", "KENTUCKY", "MISSISSIPPI", "TENNESSEE") ~ "East South Central",
      state %in% c("ARKANSAS", "LOUISIANA", "OKLAHOMA", "TEXAS") ~ "West South Central",
      state %in% c("ARIZONA", "COLORADO", "IDAHO", "MONTANA", "NEVADA", "NEW MEXICO", "UTAH", "WYOMING") ~ "Mountain",
      state %in% c("ALASKA", "CALIFORNIA", "HAWAII", "OREGON", "WASHINGTON") ~ "Pacific",
  TRUE ~ "ERROR" )
)
```



### Function for Steps 1 and 2

```{r}
library(tidyverse)
```

```{r}
readData <- function(filepath, columns= "!area_name & !STCOU") {
  data2 <- read.csv(filepath)
  filterdata <- select(data2, c(area_name = "Area_name", "STCOU"), ends_with("D"))
  long_data <- pivot_longer(filterdata, cols = (!area_name & !STCOU), names_to = "EDU_combined", values_to = "enrollment_value")
}
```

```{r}
result2 <- readData("./data/EDU01b.csv")
head(result2, 5)
```

### Function for Step 3

```{r}
dataYear <- function(step2) {
  long_updated = mutate(step2, year_dbl= as.double(substr(EDU_combined, start=8, stop = 9)),
  year = if_else(year_dbl > 25, 1900 + year_dbl, 2000 + year_dbl),
  survey_value = substr(EDU_combined, start=1, stop = 7)
         )
  long_updated <- subset(long_updated, select = -year_dbl)
}
```

```{r}
result3 <- dataYear(result2)
head(result3, 5)
```

### Function for Step 5

```{r}
state_function <- function(county_tibble){
  mutate(state = substr(area_name, nchar(area_name) - 1, nchar(area_name))
         )
}
```

### Function for Step 6

```{r}
division_function <- function(noncounty_tibble) {
  mutate(division = if_else (area_name %in% state.name,
                             state.division [match(area_name, state.name)],
                             "ERROR")
  )
}
```

### Function for Step 4

```{r}
create_datasets <- function(long_data) {
  County_indices <- grep(pattern = ", [A-Z]{2}", long_updated$area_name)
  noncounty_tibble <- long_updated[-County_indices, ]
  county_tibble <- long_updated[County_indices, ]
  class(county_tibble) <- c("county", class(county_tibble))
  class(noncounty_tibble) <- c("state", class(noncounty_tibble))
  return(list(county_tibble, noncounty_tibble))
}
```

```{r}
result4 <- create_datasets(result3)
result4
```

### Wrapper Function

```{r}
my_wrapper <- function(url, value = "Enrollment Value"){
  result <- read_csv(url) |>
  readData(value = value) |>
  dataYear() |>
  create_datasets()
  return(result)
}  
```

## Call It and Combine Your Data

## Writing a Generic Function for Summarizing

## Put It Together
